#!/usr/bin/env node

var app = require('commander');
var fs = require('fs');
var path = require('path');
var Server = require('../').Server;
var pa = require('proxy-addr');

app.option('-k, --keyfile [path]', 'The ssh key file path', path.join(process.env.HOME, '.ssh', 'id_rsa'));
app.option('-p, --port [port]', 'Port to run the proxy server on', null);
app.option('-u, --user [user]', 'Username for auth', process.env.USER);
app.option('-P, --pass [pass]', 'Password for auth');
app.option('-s, --service-name [name]', 'Service name to publish as');
app.option('--no-publish', 'Don\'t publish ZeroConf/Bonjour service');
app.parse(process.argv);

if (!app.pass) {
	throw new TypeError('Password is required');
}

// Ready keyfile
var key = fs.readFileSync(app.keyfile);

var server = new Server([{
	name: app.user,
	pass: app.pass,
	key: key
}], {
	publish: app.publish,
	serviceName: app.serviceName
}).listen(app.port, function() {
	console.log('Server listening', server.port);
});

server.on('keySent', function(key, req) {
	console.error('Key Sent to ', pa(req, function(){
		return true;
	}));
});
server.on('authError', function(err, auth) {
	console.error(err, auth);
});
server.on('error', function(err) {
	console.error(err);
	process.exit(1);
});
process.on('SIGINT', function() {
	server.on('close', function() {
		process.exit(0);
	});
	server.close();
});

